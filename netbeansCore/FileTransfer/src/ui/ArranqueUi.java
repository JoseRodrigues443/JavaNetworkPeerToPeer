/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import client.Client;
import controller.ServerController;
import static java.awt.image.ImageObserver.ABORT;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import networkElements.Address;
import networkElements.FileConnectionTCP;
import networkElements.IpProtocol;
import peerToPeer.ClientForPeerToPeer;
import peerToPeer.PeerToPeer;
import server.Server;

/**
 *
 * @author João Fernandes - 1141114 José Barros - 1151117 José Rodrigues -
 * 1150710 Tiago Vilaça - 1140412
 */
public class ArranqueUi extends javax.swing.JFrame {

    /**
     * Creates new form ArranqueUi
     */
    public ArranqueUi() {
        //custom title, warning icon
        String bannerText = "THIS IS A ISEP_RCOMP_2017_2DB COMPUTER SYSTEM."
                + "\nTHIS COMPUTER\n"
                + "SYSTEM, INCLUDING ALL RELATED EQUIPMENT, NETWORKS AND NETWORK DEVICES\n"
                + "(SPECIFICALLY INCLUDING INTERNET ACCESS), ARE PROVIDED ONLY FOR\n"
                + "AUTHORIZED USE. ISEP_RCOMP_2017_2DB SYSTEMS MAY BE MONITORED\n"
                + "FOR ALL LAWFUL PURPOSES, INCLUDING TO ENSURE THAT THEIR USE IS\n"
                + "AUTHORIZED, FOR MANAGEMENT OF THE SYSTEM, TO FACILITATE PROTECTION\n"
                + "AGAINST UNAUTHORIZED ACCESS, AND TO VERIFY SECURITY PROCEDURES,\n"
                + "SURVIVABILITY AND OPERATIONAL SECURITY. MONITORING INCLUDES ACTIVE\n"
                + "ATTACKS BY AUTHORIZED COMPANY ENTITIES TO TEST OR VERIFY THE SECURITY OF\n"
                + "THIS SYSTEM. DURING MONITORING, INFORMATION MAY BE EXAMINED,\n"
                + "RECORDED, COPIED AND USED FOR AUTHORIZED PURPOSES. ALL INFORMATION,\n"
                + "INCLUDING PERSONAL INFORMATION, PLACED ON OR SENT OVER THIS SYSTEM MAY\n"
                + "BE MONITORED.\n"
                + "\n"
                + "USE OF THIS ISEP_RCOMP_2017_2DB SYSTEM, AUTHORIZED OR UNAUTHORIZED,\n"
                + "CONSTITUTES CONSENT TO MONITORING OF THIS SYSTEM. UNAUTHORIZED USE\n"
                + "MAY SUBJECT YOU TO CRIMINAL PROSECUTION. EVIDENCE OF UNAUTHORIZED USE\n"
                + "COLLECTED DURING MONITORING MAY BE USED FOR ADMINISTRATIVE, CRIMINAL\n"
                + "OR OTHER ADVERSE ACTION. USE OF THIS SYSTEM CONSTITUTES CONSENT TO\n"
                + "MONITORING FOR THESE PURPOSES.";

        JOptionPane.showMessageDialog(this, bannerText,
                "HELLO",
                JOptionPane.WARNING_MESSAGE);

        try {
            initComponents();
            setVisible(true);
        } catch (Exception e) {
            Logger.getLogger(ArranqueUi.class.getName()).log(Level.FINE, null, e);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButtonServer = new javax.swing.JButton();
        jButtonClient = new javax.swing.JButton();
        jButtonSettings = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree = new javax.swing.JTree();
        jButtonPeerToPeer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Welcome");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("ABeeZee", 0, 36)); // NOI18N
        jLabel1.setText("WELCOME");

        jButtonServer.setFont(new java.awt.Font("ABeeZee", 0, 36)); // NOI18N
        jButtonServer.setText("Server");
        jButtonServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonServerActionPerformed(evt);
            }
        });

        jButtonClient.setFont(new java.awt.Font("ABeeZee", 0, 36)); // NOI18N
        jButtonClient.setText("Client");
        jButtonClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClientActionPerformed(evt);
            }
        });

        jButtonSettings.setFont(new java.awt.Font("ABeeZee", 0, 36)); // NOI18N
        jButtonSettings.setText("Settings");
        jButtonSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSettingsActionPerformed(evt);
            }
        });

        jTree.setFont(new java.awt.Font("ABeeZee", 0, 18)); // NOI18N
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("DropboxFanado");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Features");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Show Ip data");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Send UDP Packages");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Receive UDP packages");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Receive TCP files");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Send TCP files");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Security");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Unique TCP port");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Only one server per machine");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Too big Files divided");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("2 UDP ports");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Extras");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Log Files");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Settings");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        jTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree.setName(""); // NOI18N
        jScrollPane1.setViewportView(jTree);

        jButtonPeerToPeer.setFont(new java.awt.Font("ABeeZee", 0, 36)); // NOI18N
        jButtonPeerToPeer.setText("Peer to peer");
        jButtonPeerToPeer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPeerToPeerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonSettings, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonServer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonClient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonPeerToPeer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonServer, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonClient, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonPeerToPeer, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(84, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonServerActionPerformed
        // TODO add your handling code here:
        Server s = filetransfer.FileTransfer.createServer();
        new ServerMenuUI(s);
        dispose();

    }//GEN-LAST:event_jButtonServerActionPerformed

    private void jButtonClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClientActionPerformed
        // TODO add your handling code here:
        Client c = filetransfer.FileTransfer.createClient();
        new ClientMenuUI(c);
        dispose();
    }//GEN-LAST:event_jButtonClientActionPerformed

    private void jButtonSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSettingsActionPerformed
        // TODO add your handling code here:
        new SettingsUI();
    }//GEN-LAST:event_jButtonSettingsActionPerformed

    private void jButtonPeerToPeerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPeerToPeerActionPerformed
        // TODO add your handling code here:
        peerToPeer.PeerToPeer peerToPeer = new PeerToPeer();
        peerToPeer.run();
        dispose();
    }//GEN-LAST:event_jButtonPeerToPeerActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClient;
    private javax.swing.JButton jButtonPeerToPeer;
    private javax.swing.JButton jButtonServer;
    private javax.swing.JButton jButtonSettings;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree jTree;
    // End of variables declaration//GEN-END:variables
}
